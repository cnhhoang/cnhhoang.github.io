import { useEffect, useState } from "react";
import LoadingPage from "~/components/loading-page";
import { Carousel, CarouselContent, CarouselItem, CarouselNext, CarouselPrevious } from "~/components/ui/carousel";
import { ScrollArea, ScrollBar } from "~/components/ui/scroll-area";
import { LabBarChart, LabPieChart } from "~/lib/burp-lab-chart";

// ====================================================================================================

//****************************************************************************************************
export default function WebPentest()
{
    const [isLoading, setIsLoading] = useState(true);
    const [error, setError] = useState("");
    const [labProgress, setLabProgress] = useState([
        {
          title: "Apprentice",
          solved: 0,
          total: 59,
          color: "SpringGreen",
        },
        {
          title: "Practitioner",
          solved: 0,
          total: 171,
          color: "DodgerBlue",
        },
        {
          title: "Expert",
          solved: 0,
          total: 39,
          color: "MediumOrchid",
        },
    ]); 

    /// Database loading  
    useEffect(() => {
        fetch("https://vercel-api-git-main-hoang-chungs-projects.vercel.app/api/getPortSwiggerData")
            .then((response) => {
                if (!response.ok)
                    throw new Error(`HTTP error! Status: ${response.status}`);
                
                return response.json();
            })
            .then((data) => {
                setLabProgress(data);
                setIsLoading(false); // Data fetching complete
            })
            .catch((error) => {
                console.error("Error fetching data:", error);
                setError(error);
                setIsLoading(false); // Error
            });
      }, []);   

    /// Data processing
    const { solvedTotal, overallTotal } = labProgress.reduce(
        (acc, { solved, total }) => ({
          solvedTotal: acc.solvedTotal + solved,
          overallTotal: acc.overallTotal + total,
        }),
        { solvedTotal: 0, overallTotal: 0 }
      );
      
    /// **************************
    return (
      isLoading 
      ? <LoadingPage/>
      : <div className="h-full w-full">
            <div className="text-2xl text-white">
                Portswigger Academy progress
            </div>

            <div className="hidden sm:flex h-full w-full items-center justify-center">
                {
                    labProgress.map((entry) => (
                        <LabPieChart solve={entry.solved} total={entry.total} title={entry.title} color={entry.color}/>
                    ))
                }
            </div>
            <Carousel className="sm:hidden h-full w-full ">
                <CarouselContent className="h-full w-full">
                    { labProgress.map((entry, index) => (
                        <CarouselItem key={index} className="w-full h-full">
                                <LabPieChart solve={entry.solved} total={entry.total} title={entry.title} color={entry.color}/>
                        </CarouselItem>
                        ))
                    }
                </CarouselContent>  
            </Carousel>
            
            {/* --------------------- */}
            <div className="text-2xl text-white mb-5">
                Total lab progress
            </div>
            <div className="h-full w-full flex items-center justify-center">
                <LabBarChart solved={solvedTotal} total={overallTotal} />
            </div>

            {/* ERROR PROMPT */}
            { (error!=="") &&
                <div className="absolute bottom-2 w-full flex justify-center text-red-500">
                    Error fetching data
                </div>
            }
        </div>
    );
}